% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/deconv.R
\name{deconv}
\alias{deconv}
\title{A function to compute Empirical Bayes estimates using deconvolution}
\usage{
deconv(tau, x, y, Q, P, n = 40, family = c("Poisson", "Normal", "Binomial"),
  ignoreZero = TRUE, deltaAt = NULL, c0 = 1, scale = TRUE,
  pDegree = 5, aStart = 1, ...)
}
\arguments{
\item{tau}{a vector of (implicitly m) discrete support points for \eqn{\theta}}

\item{x}{the vector of sample values: a vector of counts for Poisson, a vector of z-scores for Normal,
a 2-d matrix with rows consisting of pairs, trial size, \eqn{n_i}, and number of successes,
\eqn{X_i}, for Binomial}

\item{Q}{the Q matrix, implies y and P are supplied as well}

\item{P}{the P matrix, implies Q and y are supplied as well}

\item{n}{the number of bins in the discretization (default 40)}

\item{family}{the exponential family, one of \code{c("Poisson", "Normal", "Binomial")}
with \code{"Poisson"}, the default}

\item{ignoreZero}{if the zero values should be ignored (default = \code{TRUE}). Applies to
Poisson only.}

\item{deltaAt}{the theta value where a delta function is desired (default \code{NULL}). Applies to
Normal only if non-null}

\item{c0}{the regularization parameter (default 1)}

\item{scale}{if the Q matrix should be scaled so that the spline basis has mean 0 and columns
sum of squares to be one, (default \code{TRUE})}

\item{pDegree}{the degree of the splines to use (default 5)}

\item{aStart}{the starting values for the non-linear optimization, default is a vector of 1s}

\item{...}{further args to function \code{nlm}}
}
\value{
a list of 9 items consisting of
\item{mle}{the maximum likelihood estimate \eqn{\hat{\alpha}}}
\item{Q}{the m by p matrix Q}
\item{P}{the n by m matrix P}
\item{R}{the ratio of artificial to genuine information as per the reference below}
\item{cov}{the covariance matrix for the mle}
\item{cov.g}{the covariance matrix for the \eqn{g}}
\item{mat}{an m by 6 matrix containing columns for \eqn{theta}, \eqn{g}, std. error of \eqn{g},
           \eqn{G} (the cdf of {g}), std. error of \eqn{G}, and the bias of \eqn{g}}
\item{loglik}{the negative log-likelihood function for the data taking a \eqn{p}-vector argument}
\item{statsFunction}{a function to compute the statistics returned above}
}
\description{
A function to compute Empirical Bayes estimates using deconvolution
}
\examples{
set.seed(238923) ## for reproducibility
N <- 1000
theta <- rchisq(N,  df = 10)
nSIM <- 50
data <- sapply(seq_len(nSIM), function(x) rpois(n = N, lambda = theta))
tau <- seq(1, 32)
results <- apply(data, 2,
                 function(x) deconv(theta = tau, x = x, ignoreZero = FALSE,
stats <- sapply(results, function(x) x$stats[, "g"])
mean <- apply(stats, 1, mean)
sd <- apply(stats, 1, sd)
data.frame(theta = tau, gTheta = 100 * dchisq(tau, df = 10),
           mean = 100 * mean, sd = 100 * sd, cv = sd / mean)
           c0 = 1))
}
\references{
Bradley Efron. Empirical Bayes Deconvolution Estimates. Biometrika 103(1), 1-20,
ISSN 0006-3444. doi:10.1093/biomet/asv068.
\url{http://biomet.oxfordjournals.org/content/103/1/1.full.pdf+html}

Bradley Efron and Trevor Hastie. Computer Age Statistical Inference.
Cambridge University Press. ISBN 978-1-1-7-14989-2. Chapter 21.
}

